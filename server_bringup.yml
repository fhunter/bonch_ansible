---

  - hosts: fileserver
    remote_user: ewg
    become: true
    gather_facts: true
    become_user: root
    become_method: ksu
    tasks:
    - name: install ansible
      apt: pkg=ansible state=present
    - include: tasks/copyansiblehosts.yml
    - include: tasks/install_temperature_report.yml
#server cleanup
    - name: remove unneeded packages
      apt:
        pkg: "{{ item }}"
        state: absent
        purge: yes
      with_items:
        - firefox-esr
        - task-desktop
        - task-kde-desktop
        - kde-standard
        - network-manager
        - wpasupplicant
        - modemmanager
        - usb-modeswitch
        - plasma-desktop
        - plasma-workspace
        - dolphin
        - packagekit
        - pulseaudio
        - kdeconnect
        - milou
        - ipp-usb
        - avahi-daemon
#deploy file server
# TODO
    #permission scripts not copied yet FIXME
    - include: tasks/servers/nfs_server.yml
# hesiod setup
    - name: install hesiod utility
      apt:
        pkg: hesiod
        state: present
    - name: deploy configs for hesiod
      copy:
        src: files/servers/etc/hesiod.conf
        dest: /etc/hesiod.conf
        owner: root
        group: root
        mode: 0644
#deploy dhcp
# TODO
    - include: tasks/servers/dhcp_server.yml
# TODO - setup config
# TODO - enable server

#Deploy email
# DONE
    - include: tasks/servers/smtp_server.yml

#deploy email client and imap/pop3
# TODO
    - name: install hesiod utility
      apt:
        pkg: [ 'dovecot-core', 'dovecot-gssapi', 'dovecot-imapd', 'dovecot-managesieved', 'dovecot-pop3d', 'dovecot-sieve' ]
        state: present
# TODO - configs + roundcube

#Deploy network boot service
# DONE
    - include: tasks/servers/network_boot.yml

# Install cups
# TODO

# install rsync service
# DONE
    - include: tasks/servers/rsync_for_packages.yml

# install apt-cacher-ng
# DONE
    - include: tasks/servers/apt_cacher_ng.yml

# install let'sencrypt certs manager
# DONE
# FIXME - check directory premissions, setup NGINX, setup cron renewal
    - name: install lecm
      apt:
        pkg: lecm
        state: present
    - name: copy lecm.conf config file
      copy:
        src: files/servers/etc/lecm.conf
        dest: /etc/lecm.conf
        owner: root
        group: root
        mode: 0644
    - name: create /etc/letsencrypt
      file:
        dest: /etc/letsencrypt
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: create /etc/letsencrypt/ paths
      file:
        dest: "/etc/letsencrypt/{{ item }}"
        state: directory
        owner: root
        group: ssl-cert
        mode: 0750
      with_items:
        - 'csr'
        - 'challenges'
        - 'pem'
        - 'private'
        - 'certs'
    - name: create /etc/letsencrypt/private/myhost.key
      file:
        dest: /etc/letsencrypt/private/myhost.key
        state: touch
        owner: root
        group: ssl-cert
        mode: 0600
# configure NGINX
# TODO

# jetbrains license server
# TODO

# gitea
# TODO

# 1c license server
# TODO

# package repository management
# DONE
    - include: tasks/servers/aptly.yml
# dns
# TODO - cron record for passwd/group updates
    - name: install tinydns and unbound
      apt:
        pkg: [ 'tinydns', 'unbound', 'make' ]
        state: present
    - name: Disable bind service
      systemd:
        state: stopped
        name: named.service
    - name: copy config files
      copy:
        src: "files/servers/etc/unbound/unbound.conf.d/{{ item }}"
        dest: "/etc/unbound/unbound.conf.d/{{ item }}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - "qname-minimisation.conf"
        - "names.conf"
    - name: Enable unbound service
      systemd:
        state: started
        name: unbound.service
    - name: add make for /etc/passwd
      cron: day=* hour=* minute=*/5 month=* weekday=* job="(cd /etc/service/tinydns/root;make) 2>&1 >/dev/null ||echo \"tinyds update fail\"" name=updatedns
