# This script is supposed to create users for student group passed in the create_group variable
# Like this:
# for i in ist511 ist521 ;do ansible-playbook -e create_group=$i make_student_group.yml ;done
# pwgen -c -n -B -1 8
---

  - hosts: 127.0.0.1
    remote_user: root

    tasks:
    - name: create group
      group: name={{create_group}} state=present system=no
    
    - name: Make group directory
      file: group=students owner=root mode=0755 path=/afs/dcti.sut.ru/homes/students/{{create_group}} state=directory
    
    - name: Add the users itself
      user: createhome=yes generate_ssh_key=yes group=students groups={{create_group}} home=/afs/dcti.sut.ru/homes/students/{{create_group}}/{{item}} name={{item}} shell=/bin/bash state=present system=no
      with_sequence: start=0 end=40 stride=1 format={{create_group}}n%02d
    
    - name: Make home directory
      file: group={{create_group}} owner={{item}} mode=0750 path=/afs/dcti.sut.ru/homes/students/{{create_group}}/{{item}} state=directory
      with_sequence: start=0 end=40 stride=1 format={{create_group}}n%02d

    - name: Fix jabber configuration
      with_sequence: start=0 end=40 stride=1 format={{create_group}}n%02d
      template: dest=/afs/dcti.sut.ru/homes/students/{{create_group}}/{{item}}/.purple/accounts.xml src=templates/accounts.xml.j2 mode='0600' owner={{item}} group={{create_group}}

    - name: add kerberos principal
      script: scripts/create_principal.sh students {{item}} {{create_group}}
      with_sequence: start=0 end=40 stride=1 format={{create_group}}n%02d
    
    - name: Patch passwd  # to replace password field with *K*
      command: sed 's/^{{item}}:x:/{{item}}:*K*:/' -i /etc/passwd
      with_sequence: start=0 end=40 stride=1 format={{create_group}}n%02d

    - name: Setup quota
      command: setquota -u {{item}} 500000 550000 0 0 /home
      with_sequence: start=0 end=40 stride=1 format={{create_group}}n%02d

    - name: Do update of user lists before password reset
      script: scripts/triggerupdate.py
    
    - name: trigger password reset
      script: scripts/triggerreset.py {{item}}
      with_sequence: start=0 end=40 stride=1 format={{create_group}}n%02d


#    - name: Setup svn server 1
#      file: path=/srv/svn/{{create_group}} state=directory
#
#    - name: Setup svn server 2
#      command: svnadmin create /srv/svn/{{create_group}}
#      args:
#        creates: /srv/svn/{{create_group}}/db
#
#    - name: Setup svn server 3
#      command: cp /srv/svn/sandbox/conf/svnserve.conf /srv/svn/{{create_group}}/conf
